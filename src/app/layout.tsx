import type { Metadata } from "next";
import { Geist } from "next/font/google";
import "@mantine/core/styles.css";
import {
  ColorSchemeScript,
  Divider,
  MantineColorsTuple,
  MantineProvider,
  createTheme,
  mantineHtmlProps,
} from "@mantine/core";
import Header from "./components/header";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const myColor: MantineColorsTuple = [
  "#e1fbff",
  "#ccf3ff",
  "#9ce4ff",
  "#68d4fe",
  "#41c7fd",
  "#2cbffd",
  "#1abbfe",
  "#00adef",
  "#0092cc",
  "#007fb4",
];

const theme = createTheme({
  colors: {
    myColor,
  },
  primaryColor: "myColor",
  fontFamily: geistSans.style.fontFamily,
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="pt-br" {...mantineHtmlProps}>
      <head>
        <ColorSchemeScript />
      </head>
      <body className={`antialiased`}>
        <MantineProvider theme={theme} withGlobalClasses withCssVariables>
          <Header />
          <Divider my="sm" />
          {children}
        </MantineProvider>
      </body>
    </html>
  );
}
